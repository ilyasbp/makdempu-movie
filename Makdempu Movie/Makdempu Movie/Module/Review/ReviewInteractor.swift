//
//  ReviewInteractor.swift
//  Makdempu Movie
//
//  Created by Ilyas Bintang Prayogi on 13/02/24.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class ReviewInteractor {
    var presenter: ReviewPresenter?
    var page = 1
}

// MARK: - Extensions -

extension ReviewInteractor: ReviewInteractorInterface {
    func fetchAdditionalReviews(with movieId: Int, completion: @escaping (Result<[Review], Error>) -> Void) {
        page += 1
        guard let url = URL(string: "\(APIConstants.baseURL)/movie/\(movieId)/reviews\(APIConstants.key)&page=\(page)") else { return }
        let task = URLSession.shared.dataTask(with: url) { [weak self] data, response,error in
            guard let data = data, error == nil else {
                return
            }
            
            do {
                let entities = try JSONDecoder().decode(ReviewResponse.self, from: data)
                completion(.success(entities.results ?? []))
            }
            catch {
                completion(.failure(error))
            }
        }
        task.resume()
    }
    
    func fetchReviewList(with movieId: Int) {
        guard let url = URL(string: "\(APIConstants.baseURL)/movie/\(movieId)/reviews\(APIConstants.key)") else { return }
        let task = URLSession.shared.dataTask(with: url) { [weak self] data, response,error in
            guard let data = data, error == nil else {
                return
            }
            
//            let outputStr  = String(data: data, encoding: String.Encoding.utf8)! as String
            
            do {
                let entities = try JSONDecoder().decode(ReviewResponse.self, from: data)
                self?.presenter?.interactorDidFetchReviews(with: .success(entities.results ?? []))
            }
            catch {
                self?.presenter?.interactorDidFetchReviews(with: .failure(error))
            }
        }
        task.resume()
    }
    
}
