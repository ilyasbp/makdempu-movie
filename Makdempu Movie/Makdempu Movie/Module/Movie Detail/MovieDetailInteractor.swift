//
//  MovieDetailInteractor.swift
//  Makdempu Movie
//
//  Created by Ilyas Bintang Prayogi on 13/02/24.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class MovieDetailInteractor {
    var presenter: MovieDetailPresenter?
}

// MARK: - Extensions -

extension MovieDetailInteractor: MovieDetailInteractorInterface {
    func fetchMovieDetail(with movieId: Int) {
        guard let url = URL(string: "\(APIConstants.baseURL)/movie/\(movieId)\(APIConstants.key)") else { return }
        let task = URLSession.shared.dataTask(with: url) { [weak self] data, response,error in
            guard let data = data, error == nil else {
                return
            }
            
//            let outputStr  = String(data: data, encoding: String.Encoding.utf8)! as String
            
            do {
                let entities = try JSONDecoder().decode(Movie.self, from: data)
                self?.presenter?.interactorDidFetchMovie(with: .success(entities))
            }
            catch {
                self?.presenter?.interactorDidFetchMovie(with: .failure(error))
            }
        }
        task.resume()
    }
    
    func fetchMovieTrailer(with movieId: Int) {
        guard let url = URL(string: "\(APIConstants.baseURL)/movie/\(movieId)/videos\(APIConstants.key)") else { return }
        let task = URLSession.shared.dataTask(with: url) { [weak self] data, response,error in
            guard let data = data, error == nil else {
                return
            }
            
            let outputStr  = String(data: data, encoding: String.Encoding.utf8)! as String
            
            do {
                let entities = try JSONDecoder().decode(TrailerResponse.self, from: data)
                self?.presenter?.interactorDidFetchTrailer(with: .success(entities.results ?? []))
            }
            catch {
                self?.presenter?.interactorDidFetchTrailer(with: .failure(error))
            }
        }
        task.resume()
    }
    
}
